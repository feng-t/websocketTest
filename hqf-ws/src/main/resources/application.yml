server:
  port: 1997
spring:
  application:
    name: hqf-ws
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/hqf-ws?characterEncoding=utf-8
    username: root
    password: 123456root
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      initial-size: 5
      min-idle: 5
      max-active: 20
      max-wait: 60000
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT1FROMDUAL
      test-while-idle: true
      test-on-return: false
      test-on-borrow: false
      filters: stat,wall,log4j
      filter:
        stat:
          log-slow-sql: true
  jpa:
    hibernate:
      ddl-auto: update
        #自动创建|更新|验证数据库表结构。如果不是此方面的需求建议set value="none"。
        #create：
        #每次加载hibernate时都会删除上一次的生成的表，然后根据你的model类再重新来生成新表，哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因。
        #create-drop ：
        #每次加载hibernate时根据model类生成表，但是sessionFactory一关闭,表就自动删除。
        #update：
      #最常用的属性，第一次加载hibernate时根据model类会自动建立起表的结构（前提是先建立好数据库），以后加载hibernate时根据 model类自动更新表结构，即使表结构改变了但表中的行仍然存在不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等 应用第一次运行起来后才会。
      #validate ：
      #每次加载hibernate时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。
    show-sql: true
  redis:
      host: localhost
      port: 6379
      password: 12345
      jedis:
        pool:
          max-active: 8
          max-wait: 3000ms
          max-idle: 8
          min-idle: 0
      timeout: 2000ms
  groovy:
    template:
      cache: false


eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://root:13hbjhdgda234kfhsd@localhost:17990/eureka/ #默认无法连接，因为新版本的security默认开启csrf了
  instance:
    prefer-ip-address: true #将自己的IP地址注册到eureka中